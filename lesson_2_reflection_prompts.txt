How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I think usually the last version is correctly running, through editing, we may introduce some bugs, find the editing postion help us to spot these bugs.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?
	
	I think it help us to remember what we have done, and help us to debug. 
    

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Versions automatically saved,
    Pros : it is easy to recover to a specific time not very long ago.
    Cons : the saved frequency may not suitable for the user, besides, it did not have a specific theme for the changes.

    Manually choosing when to create a commit,
    Pros : every commit got a theme, it is easy for review.
    Cons : sometime you may forget to commit. 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Well, I think Git mainly used in coding, so there are lots of links between different files in a coding project. Others, the links between different files is less ferequent than programming project.

How can you use the commands git log and git diff to view the history of files?

    Use the command git log or git log --stat to browse the changes in files. Find the specific change in the log , use the command git [first commit] [second commit] to see the changes.

How might using version control make you more confident to make changes that
could break something?

    Because I can go back to the versions that could work, so I am more confident to make changes that can possibly break something. 

Now that you have your workspace set up, what do you want to try using Git for?

    D:\Programtool\Sublime Text 2

git config --global core.editor "'D:/Programtool/Sublime Text 2/sublime_text.exe' -n -w"
git config --global push.default upstream
git config --global merge.conflictstyle diff3
