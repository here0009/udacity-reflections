What happens when you initialize a repository? Why do you need to do it?
	I think it will creat a repository to store the informations about the files in the repository.

How is the staging area different from the working directory and the repository?
	It can be seen as a hub between the working directory and the repository, once we had made some changes in the working directory, we can separate these changes in the working direcory, and make different commits according to the logic units of these changes.

What value do you think it offers?
	Well, with the staging area, you can manipulate the changes in different files more easily. You can combine or separate these change more convienient.

How can you use the staging area to make sure you have one commit per logical
change?
	I will add the changes that belongs to one logcial change to the staging area together, and commit them as a logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	If you want to do something experimental, or somehow independent change from the mainstream, I think using branch will be a good idea. 
	Branches help us to get a clearly infrastructure of the whole project, and it can be easily to specify different branches.

How do the diagrams help you visualize the branch structure?
	The diagrams show the branch structure directly, so it is easy to see the orgnization of the branch structure.
	
What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	It will delete the branch label of one branch.
	Using the diagram, it is easy to visulize the relationships between different commits.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
	Git's automatic merging is more faster, more convinient than manally mergeing, and it help you to compare the two mergeing files.
	When there are lots of confilictions, I think it is better to do it manually.
